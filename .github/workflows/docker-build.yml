name: Build & Push Docker Image

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/kubedeckio/kubebuddy

jobs:
  docker-build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write  # Needed for SBOM submission

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set tag version
        id: meta
        run: echo "TAG=${GITHUB_REF##*/}" >> "$GITHUB_OUTPUT"

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Update PowerShell module version for Docker
        run: |
          TAG_VERSION=${GITHUB_REF##*/}  # like v0.0.19
          CLEAN_VERSION=${TAG_VERSION#v} # like 0.0.19

          # Update PSD1
          sed -i "s/^\s*ModuleVersion\s*=.*/ModuleVersion = '$CLEAN_VERSION'/" KubeBuddy.psd1

          # Update PS1
          sed -i "s/^\s*\$moduleVersion\s*=.*/\$moduleVersion = 'v$CLEAN_VERSION'/" Public/kubebuddy.ps1

          echo "Updated module version to v$CLEAN_VERSION for Docker build."

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push multi-architecture Docker image
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --tag $IMAGE_NAME:${{ steps.meta.outputs.TAG }} \
            --push \
            .

      - name: Pull image for scanning
        run: |
          docker pull $IMAGE_NAME:${{ steps.meta.outputs.TAG }}

      - name: Scan image for vulnerabilities (block on CRITICAL)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.TAG }}
          format: table
          exit-code: 1
          ignore-unfixed: true
          severity: CRITICAL

      - name: Generate SBOM (SPDX)
        if: success()
        run: |
          trivy image --format spdx-json --output sbom-${{ steps.meta.outputs.TAG }}.json $IMAGE_NAME:${{ steps.meta.outputs.TAG }}

      - name: Upload SBOM as artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: sbom-${{ steps.meta.outputs.TAG }}
          path: sbom-${{ steps.meta.outputs.TAG }}.json

      # - name: Submit SBOM to GitHub Dependency Graph
      #   if: success()
      #   uses: advanced-security/spdx-dependency-submission-action@v0.1.1
      #   with:
      #     filePath: sbom-${{ steps.meta.outputs.TAG }}.json

      - name: Tag as 'latest' (optional)
        if: success() && startsWith(steps.meta.outputs.TAG, 'v')
        run: |
          docker buildx imagetools create \
            --tag $IMAGE_NAME:latest \
            $IMAGE_NAME:${{ steps.meta.outputs.TAG }}
name: Publish KubeBuddy Release

on:
  push:
    tags:
      - 'v*'  # Trigger on any tag like v1.2.3
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: windows-latest
    env:
      TAG: ${{ github.ref_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Debug Tag
        shell: pwsh
        run: |
          Write-Host "GITHUB_REF:    $Env:GITHUB_REF"
          Write-Host "GITHUB_REF_NAME: $Env:TAG"

      - name: Set Module Version from Tag
        id: set_version
        shell: pwsh
        run: |
          $version = '${{ env.TAG }}'.TrimStart('v')
          Write-Host "==> Updating to version $version"

          (Get-Content .\KubeBuddy.psd1) `
            -replace "ModuleVersion = '.*'", "ModuleVersion = '$version'" |
            Set-Content .\KubeBuddy.psd1

          (Get-Content .\Public\kubebuddy.ps1) |
            ForEach-Object {$_ -replace "\$moduleVersion = '.*'", "`$moduleVersion = 'v$version'"} |
            Set-Content .\Public\kubebuddy.ps1

      - name: Create tar.gz package
        shell: pwsh
        run: |
          $tag     = '${{ env.TAG }}'
          $archive = "kubebuddy-$tag.tar.gz"

          tar.exe -czvf $archive `
            .\KubeBuddy.psd1 `
            .\KubeBuddy.psm1 `
            .\Public `
            .\Private

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.TAG }}
          release_name: KubeBuddy ${{ env.TAG }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload module tarball
        uses: softprops/action-gh-release@v1
        with:
          files: kubebuddy-${{ env.TAG }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update release notes from CHANGELOG
        shell: pwsh
        run: |
          $version = '${{ env.TAG }}'.TrimStart('v')
          $changelog = Get-Content .\CHANGELOG.md -Raw
          if ($changelog -match "(?s)## \[$version\].*?(?=## \[|$)") {
            $notes = $matches[0]
            $notes | Out-File release_notes.md -Encoding utf8
            gh release edit ${{ env.TAG }} -F release_notes.md --repo ${{ github.repository }}
          } else {
            Write-Host "No CHANGELOG entry found for v$version"
          }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  check-latest:
    needs: build-and-release
    runs-on: ubuntu-22.04
    outputs:
      IS_LATEST:  ${{ steps.check-latest.outputs.release == github.ref_name }}
    steps:
      - id: check
        uses: pozetroninc/github-action-get-latest-release@v0.7.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          excludes: prerelease, draft

  hash:
    needs: check-latest
    runs-on: ubuntu-latest
    if: needs.check-latest.outputs.IS_LATEST
    outputs:
      BUILD_HASH: ${{ steps.calc.outputs.BUILD_HASH }}
    steps:
      - name: Download tarball
        run: |
          curl -L -o kubebuddy.tar.gz https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/kubebuddy-${{ github.ref_name }}.tar.gz
      - name: Calculate SHA256
        id: calc
        run: |
          echo "hash=$(sha256sum kubebuddy.tar.gz | cut -d ' ' -f 1)" >> $GITHUB_OUTPUT

  update-formula:
    needs: [check-latest, hash]
    runs-on: ubuntu-latest
    if: needs.check-latest.outputs.IS_LATEST
    steps:
      - name: Checkout homebrew tap
        uses: actions/checkout@v3
        with:
          repository: KubeDeckio/homebrew-kubebuddy
          token: ${{ secrets.BREW_BUMP_TOKEN }}
          path: homebrew-kubebuddy

      - name: Update formula
        working-directory: homebrew-kubebuddy
        run: |
          TAG=${{ github.ref_name }}
          SHA=${{ needs.mac-hash.outputs.BUILD_HASH }}
          FORMULA=Formula/kubebuddy.rb

          sed -i "s|url \".*\"|url \"https://github.com/${{ github.repository }}/releases/download/${TAG}/kubebuddy-${TAG}.tar.gz\"|" $FORMULA
          sed -i "s|sha256 \".*\"|sha256 \"$SHA\"|" $FORMULA

          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git commit -am "Bump KubeBuddy formula to ${TAG}"
          git push
